library(ggarchery)
setwd("/Users/matt/Documents/GitHub/hla/scripts/coverage_plots/")
# Read the TSV file
#df <- read_tsv("HG002_per_base.tsv", col_names = c("coordinate", "coverage_depth"))
#df <- read_tsv("HG01106_per_base.tsv",col_names = c("coordinate", "coverage_depth"))
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# Read the TSV files and add an identifier for each dataframe
df1 <- read_tsv("HG002_per_base.tsv", col_names = c("coordinate", "coverage_depth")) %>%
mutate(sample = "HG002")
df2 <- read_tsv("HG01106_per_base.tsv", col_names = c("coordinate", "coverage_depth")) %>%
mutate(sample = "HG01106")
df3 <- read_tsv("NA19240_per_base.tsv", col_names = c("coordinate", "coverage_depth")) %>%
mutate(sample = "NA19240")
df4 <- read_tsv("HG03492_per_base.tsv", col_names = c("coordinate", "coverage_depth")) %>%
mutate(sample = "HG03492")
# Combine the two dataframes
df_combined <- bind_rows(df1, df2, df3, df4)
# Reorder the factor levels for the sample to control the legend order
df_combined$sample <- factor(df_combined$sample, levels = c("HG03492", "NA19240", "HG002", "HG01106"))
# Define the colors for the samples
sample_colors <- c("HG01106" = "red", "HG002" = "grey60", "NA19240" = "grey70", "HG03492" = "grey80")
# Filter the df_combined to only include rows where 'coordinate' is between 31982056 and 32035418
df_combined_filtered <- df_combined %>%
filter(coordinate >= 31982056 & coordinate <= 32035418)
# Create the plot using the filtered data
figure <- ggplot(df_combined_filtered, aes(x = coordinate, y = coverage_depth, group = sample, color = sample)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
geom_hline(yintercept = 20, linetype = "dashed", color = "black") +
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(df_combined_filtered$coordinate, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 509.5, xend = 32002681, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 530, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 509.5, xend = 32035418, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 530, label = "C4B", color = "black", vjust = 0, size = 4)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(500),
ymax = max(520),
fill = "black", color = "black", size = 0.1)
}
# Display the filtered figure
print(figure)
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/")
# Example BED file with chr, start, stop, and name
bed_file <- "subset_exons.bed"
annotations <- read.table(bed_file, header = FALSE, col.names = c("chr", "start", "stop", "name"))
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
# Example BED file with chr, start, stop, and name
bed_file <- "subset_exons.bed"
annotations <- read.table(bed_file, header = FALSE, col.names = c("chr", "start", "stop", "name"))
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
# Example BED file with chr, start, stop, and name
bed_file <- "subset_exons.bed"
annotations <- read.table(bed_file, header = FALSE, col.names = c("chr", "start", "stop))
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
# Example BED file with chr, start, stop, and name
bed_file <- "subset_exons.bed"
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
#data_filtered <- collapsed_data %>% filter(base >= 29720774 & base <= 30016539)
# MHC Class I Part 2
#data_filtered <- collapsed_data %>% filter(base >= 30000000 & base <= 30499999)
# MHC Class I Part 3
#data_filtered <- collapsed_data %>% filter(base >= 31262000 & base <= 31389999)
#MHC Class II Part 1
#data_filtered <- collapsed_data %>% filter(base >= 32572500 & base <= 32770000)
# MHC Class II Part 2
#data_filtered <- collapsed_data %>% filter(base >= 33064568 & base <= 33129084)
# MHC Class III
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
View(data_filtered)
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$coordinate, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 509.5, xend = 32002681, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 530, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 509.5, xend = 32035418, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 530, label = "C4B", color = "black", vjust = 0, size = 4)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(500),
ymax = max(520),
fill = "black", color = "black", size = 0.1)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(500),
ymax = max(520),
fill = "black", color = "black", size = 0.1)
}
]
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$coordinate, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 509.5, xend = 32002681, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 530, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 509.5, xend = 32035418, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 530, label = "C4B", color = "black", vjust = 0, size = 4)
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$base, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 509.5, xend = 32002681, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 530, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 509.5, xend = 32035418, yend = 510.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 530, label = "C4B", color = "black", vjust = 0, size = 4)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(500),
ymax = max(520),
fill = "black", color = "black", size = 0.1)
}
figure
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$base, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 299.5, xend = 32002681, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 330, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 299.5, xend = 32035418, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 330, label = "C4B", color = "black", vjust = 0, size = 4)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(300),
ymax = max(320),
fill = "black", color = "black", size = 0.1)
}
figure
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$base, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 299.5, xend = 32002681, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 310, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 299.5, xend = 32035418, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 310, label = "C4B", color = "black", vjust = 0, size = 4)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(290),
ymax = max(310),
fill = "black", color = "black", size = 0.1)
}
figure
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$base, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 299.5, xend = 32002681, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 315, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 299.5, xend = 32035418, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 315, label = "C4B", color = "black", vjust = 0, size = 4)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(290),
ymax = max(310),
fill = "black", color = "black", size = 0.075)
}
figure
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
asterisk_coordinates <- c(31994396, 31994623, 31995781, 31996082, 31996085,
31996093, 31996096, 31996098, 31996450, 31996538,
31996543, 31996552, 31996553, 31996613, 31996617,
31997007, 31997464, 31997605)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Mean Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$base, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 299.5, xend = 32002681, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 315, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 299.5, xend = 32035418, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 315, label = "C4B", color = "black", vjust = 0, size = 4) +
geom_point(data = tibble(x = asterisk_coordinates, y = 330),
aes(x = x, y = y),
shape = 8, color = "red", size = 3)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(290),
ymax = max(310),
fill = "black", color = "black", size = 0.075)
}
figure
library(tidyverse)
library(ggplot2)
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/c4/")
bed_data <- read_tsv("subset_exons.bed", col_names = c("chrom", "start", "end"))
# per-base coverage file
hla_per_base <- "/Users/matt/Documents/GitHub/mhc/clean_data/pacbio_mean_std_depth.rds"
data <- readRDS(hla_per_base)
# Collapse data into 100-base-pair windows
collapsed_data <- data %>%
mutate(window = floor(base / 100) * 100 + 50) %>% # Create windows centered at midpoints
group_by(window) %>%
summarize(
mean_depth = mean(mean_depth),
std_depth = mean(std_depth)
)
# Rename 'window' to 'base' for consistency
collapsed_data <- collapsed_data %>%
rename(base = window)
data_filtered <- collapsed_data %>% filter(base >= 31982056 & base <= 32035418)
asterisk_coordinates <- c(31994396, 31994623, 31995781, 31996082, 31996085, 31996093, 31996096, 31996098, 31996450, 31996538, 31996543, 31996552, 31996553, 31996613, 31996617, 31997007, 31997464, 31997605, 32027134, 32027361, 32028519, 32028820, 32028823, 32028831, 32028834, 32028836, 32029188, 32029276, 32029281, 32029290, 32029291, 32029351, 32029355, 32029745, 32030202, 32030343)
# Create the plot using the filtered data
figure <- ggplot(data_filtered, aes(x = base, y = mean_depth)) +
geom_line(size = 1.25) +  # Apply linewidth 1.25 for all lines
xlab("Position on Chromosome 6 (Mb)") +  # Update x-axis label to indicate Mb
ylab("Mean Coverage Depth") +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = sample_colors) +  # Apply the color scale
scale_x_continuous(
labels = function(x) sprintf("%.2f", x / 1e6),   # Convert bases to Mb and format with 2 decimal places
breaks = pretty(data_filtered$base, n = 6)   # Generate 6 tick marks on the x-axis
) +
geom_segment(aes(x = 31982056, y = 299.5, xend = 32002681, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(31982056, 32002681)), y = 315, label = "C4A", color = "black", vjust = 0, size = 4) +
geom_segment(aes(x = 32014794, y = 299.5, xend = 32035418, yend = 300.5), size = 1, color = "black") +
annotate("text", x = mean(c(32014794, 32035418)), y = 315, label = "C4B", color = "black", vjust = 0, size = 4) +
geom_point(data = tibble(x = asterisk_coordinates, y = 330),
aes(x = x, y = y),
shape = 8, color = "red", size = 3)
# Annotate exons from bed_data
for (i in 1:nrow(bed_data)) {
figure <- figure + annotate("rect",
xmin = bed_data$start[i],
xmax = bed_data$end[i],
ymin = min(290),
ymax = max(310),
fill = "black", color = "black", size = 0.075)
}
figure
ggsave(filename = "c4.png", plot = figure, width=169, units = "mm")
ggsave(filename = "c4.pdf", plot = figure, width=169, units = "mm")
