data <- read_csv(file_path, col_names = TRUE) %>%
mutate(
total = as.numeric(gsub(",", "", total)),  # Remove commas and convert to numeric
duplicates = as.numeric(gsub(",", "", duplicates)),  # Remove commas and convert to numeric
unique_reads = total - duplicates,  # Calculate unique reads
platform = platform  # Add platform column
) %>%
select(sample, unique_reads, platform) %>%  # Keep necessary columns
mutate(
sample_group = case_when(
sample %in% hprc_samples ~ "HPRC",
sample %in% ihw_samples ~ "IHW",
TRUE ~ "Other"
)
) %>%
filter(sample_group != "Other") %>%  # Keep only HPRC and IHW
drop_na(unique_reads)  # Remove rows with NA in unique_reads
return(data)
}
# Define sample groups
hprc_samples <- c("HG002", "HG003", "HG004", "HG005", "HG01106", "HG01258",
"HG01928", "HG02055", "HG02630", "HG03492", "HG03579",
"NA19240", "NA20129", "NA21309", "NA24694", "NA24695")
ihw_samples <- c("IHW09021", "IHW09049", "IHW09071", "IHW09117", "IHW09118",
"IHW09122", "IHW09125", "IHW09175", "IHW09198", "IHW09200",
"IHW09224", "IHW09245", "IHW09251", "IHW09359", "IHW09364",
"IHW09409")
# Process data
revio_data <- process_data(revio_file, "PacBio")
promethion_data <- process_data(promethion_file, "ONT")
# Combine datasets
combined_data <- bind_rows(revio_data, promethion_data) %>%
mutate(
x_group = paste(platform, sample_group),  # Create combined group for x-axis
x_group = factor(
x_group,
levels = c("PacBio HPRC", "PacBio IHW", "ONT HPRC", "ONT IHW")  # Ensure correct x-axis order
)
)
# Create the box plot
combined_plot <- ggplot(combined_data, aes(x = x_group, y = unique_reads, fill = x_group)) +
geom_boxplot(
alpha = 0.3, width = 0.3, outlier.shape = NA, color = "black"
) +
geom_jitter(
aes(color = x_group),
width = 0.2, height = 0, size = 2, alpha = 0.8
) +
scale_y_continuous(labels = scales::scientific) +
scale_fill_manual(values = c(
"PacBio HPRC" = "#1F78B4", "PacBio IHW" = "#333333",
"ONT HPRC" = "#A6CEE3", "ONT IHW" = "#666666"
)) +
scale_color_manual(values = c(
"PacBio HPRC" = "#1F78B4", "PacBio IHW" = "#333333",
"ONT HPRC" = "#A6CEE3", "ONT IHW" = "#666666"
)) +
labs(x = NULL, y = "Unique Reads") +
theme_bw() +
theme(
axis.text.x = element_text(angle = 20, hjust = 1, size = 12, face = "bold"),  # Slight angle for labels
axis.title.y = element_text(angle = 0, size = 8, hjust = 0.5, vjust = 0.5, face = "bold"),  # Centered y-axis
axis.line.x = element_line(color = "black", linewidth = 0.5),  # Restore x-axis line
panel.grid.major.y = element_line(color = "gray90"),  # Feint y-axis gridlines
panel.grid.major.x = element_blank(),  # Remove vertical grid lines
panel.border = element_blank(),
legend.position = "none"  # Remove legend
)
# Display the combined plot
print(combined_plot)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
# Set working directory
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/mapping/")
# File paths
revio_file <- "revio_flagstat_results.csv"
promethion_file <- "promethion_flagstat_results.csv"
# Function to process and clean data
process_data <- function(file_path, platform) {
# Read data
data <- read_csv(file_path, col_names = TRUE) %>%
mutate(
total = as.numeric(gsub(",", "", total)),  # Remove commas and convert to numeric
duplicates = as.numeric(gsub(",", "", duplicates)),  # Remove commas and convert to numeric
unique_reads = total - duplicates,  # Calculate unique reads
platform = platform  # Add platform column
) %>%
select(sample, unique_reads, platform) %>%  # Keep necessary columns
mutate(
sample_group = case_when(
sample %in% hprc_samples ~ "HPRC",
sample %in% ihw_samples ~ "IHW",
TRUE ~ "Other"
)
) %>%
filter(sample_group != "Other") %>%  # Keep only HPRC and IHW
drop_na(unique_reads)  # Remove rows with NA in unique_reads
return(data)
}
# Define sample groups
hprc_samples <- c("HG002", "HG003", "HG004", "HG005", "HG01106", "HG01258",
"HG01928", "HG02055", "HG02630", "HG03492", "HG03579",
"NA19240", "NA20129", "NA21309", "NA24694", "NA24695")
ihw_samples <- c("IHW09021", "IHW09049", "IHW09071", "IHW09117", "IHW09118",
"IHW09122", "IHW09125", "IHW09175", "IHW09198", "IHW09200",
"IHW09224", "IHW09245", "IHW09251", "IHW09359", "IHW09364",
"IHW09409")
# Process data
revio_data <- process_data(revio_file, "PacBio")
promethion_data <- process_data(promethion_file, "ONT")
# Combine datasets
combined_data <- bind_rows(revio_data, promethion_data) %>%
mutate(
x_group = paste(platform, sample_group),  # Create combined group for x-axis
x_group = factor(
x_group,
levels = c("PacBio HPRC", "PacBio IHW", "ONT HPRC", "ONT IHW")  # Ensure correct x-axis order
)
)
# Create the box plot
combined_plot <- ggplot(combined_data, aes(x = x_group, y = unique_reads, fill = x_group)) +
geom_boxplot(
alpha = 0.3, width = 0.3, outlier.shape = NA, color = "black"
) +
geom_jitter(
aes(color = x_group),
width = 0.15, height = 0, size = 2, alpha = 0.8  # Adjust jitter width to match box width
) +
scale_y_continuous(labels = scales::scientific) +
scale_fill_manual(values = c(
"PacBio HPRC" = "#1F78B4", "PacBio IHW" = "#333333",
"ONT HPRC" = "#33A02C", "ONT IHW" = "#FB9A99"  # New colors for ONT groups
)) +
scale_color_manual(values = c(
"PacBio HPRC" = "#1F78B4", "PacBio IHW" = "#333333",
"ONT HPRC" = "#33A02C", "ONT IHW" = "#FB9A99"
)) +
labs(x = NULL, y = "Unique\nReads") +
theme_bw() +
theme(
axis.text.x = element_text(size = 12, face = "bold", color = "black"),  # Bold and black x-axis labels
axis.title.y = element_text(angle = 0, size = 10, hjust = 0.5, vjust = 0.5, face = "bold"),  # Centered y-axis label
axis.line.x = element_line(color = "black", linewidth = 0.5),  # Restore x-axis line
panel.grid.major.y = element_line(color = "gray90"),  # Faint y-axis gridlines
panel.grid.major.x = element_blank(),  # Remove vertical grid lines
panel.border = element_blank(),
legend.position = "none"  # Remove legend
)
# Display the combined plot
print(combined_plot)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
# Set working directory
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/mapping/")
# File paths
revio_file <- "revio_flagstat_results.csv"
promethion_file <- "promethion_flagstat_results.csv"
# Function to process and clean data
process_data <- function(file_path, platform) {
# Read data
data <- read_csv(file_path, col_names = TRUE) %>%
mutate(
total = as.numeric(gsub(",", "", total)),  # Remove commas and convert to numeric
duplicates = as.numeric(gsub(",", "", duplicates)),  # Remove commas and convert to numeric
unique_reads = total - duplicates,  # Calculate unique reads
platform = platform  # Add platform column
) %>%
select(sample, unique_reads, platform) %>%  # Keep necessary columns
mutate(
sample_group = case_when(
sample %in% hprc_samples ~ "HPRC",
sample %in% ihw_samples ~ "IHW",
TRUE ~ "Other"
)
) %>%
filter(sample_group != "Other") %>%  # Keep only HPRC and IHW
drop_na(unique_reads)  # Remove rows with NA in unique_reads
return(data)
}
# Define sample groups
hprc_samples <- c("HG002", "HG003", "HG004", "HG005", "HG01106", "HG01258",
"HG01928", "HG02055", "HG02630", "HG03492", "HG03579",
"NA19240", "NA20129", "NA21309", "NA24694", "NA24695")
ihw_samples <- c("IHW09021", "IHW09049", "IHW09071", "IHW09117", "IHW09118",
"IHW09122", "IHW09125", "IHW09175", "IHW09198", "IHW09200",
"IHW09224", "IHW09245", "IHW09251", "IHW09359", "IHW09364",
"IHW09409")
# Process data
revio_data <- process_data(revio_file, "PacBio")
promethion_data <- process_data(promethion_file, "ONT")
# Combine datasets
combined_data <- bind_rows(revio_data, promethion_data) %>%
mutate(
x_group = paste(platform, sample_group),  # Create combined group for x-axis
x_group = factor(
x_group,
levels = c("PacBio HPRC", "PacBio IHW", "ONT HPRC", "ONT IHW")  # Ensure correct x-axis order
)
)
# Colorblind-friendly colors
colors <- c(
"PacBio HPRC" = "#E69F00",  # Orange
"PacBio IHW" = "#56B4E9",   # Blue
"ONT HPRC" = "#009E73",     # Green
"ONT IHW" = "#F0E442"       # Yellow
)
# Create the box plot
combined_plot <- ggplot(combined_data, aes(x = x_group, y = unique_reads, fill = x_group)) +
geom_boxplot(
alpha = 0.3, width = 0.3, outlier.shape = NA, color = "black"
) +
geom_jitter(
aes(color = x_group),
width = 0.15, height = 0, size = 2, alpha = 0.8  # Adjust jitter width to match box width
) +
scale_y_continuous(labels = scales::scientific) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
labs(x = NULL, y = "Unique\nReads") +
theme_bw() +
theme(
axis.text.x = element_text(size = 12, face = "bold", color = "black"),  # Bold and black x-axis labels
axis.title.y = element_text(angle = 0, size = 12, hjust = 0.5, vjust = 0.5, face = "bold"),  # Centered y-axis label
axis.line.x = element_line(color = "black", linewidth = 0.5),  # Restore x-axis line
axis.line.y = element_line(color = "black", linewidth = 0.5),  # Restore y-axis line
panel.grid.major.y = element_line(color = "gray90"),  # Faint y-axis gridlines
panel.grid.major.x = element_blank(),  # Remove vertical grid lines
panel.border = element_blank(),
legend.position = "none"  # Remove legend
)
# Display the combined plot
print(combined_plot)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(viridis)  # For color palette
# Set working directory
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/mapping/")
# File paths
revio_file <- "revio_flagstat_results.csv"
promethion_file <- "promethion_flagstat_results.csv"
# Function to process and clean data
process_data <- function(file_path, platform) {
# Read data
data <- read_csv(file_path, col_names = TRUE) %>%
mutate(
total = as.numeric(gsub(",", "", total)),  # Remove commas and convert to numeric
duplicates = as.numeric(gsub(",", "", duplicates)),  # Remove commas and convert to numeric
unique_reads = total - duplicates,  # Calculate unique reads
platform = platform  # Add platform column
) %>%
select(sample, unique_reads, platform) %>%  # Keep necessary columns
mutate(
sample_group = case_when(
sample %in% hprc_samples ~ "HPRC",
sample %in% ihw_samples ~ "IHW",
TRUE ~ "Other"
)
) %>%
filter(sample_group != "Other") %>%  # Keep only HPRC and IHW
drop_na(unique_reads)  # Remove rows with NA in unique_reads
return(data)
}
# Define sample groups
hprc_samples <- c("HG002", "HG003", "HG004", "HG005", "HG01106", "HG01258",
"HG01928", "HG02055", "HG02630", "HG03492", "HG03579",
"NA19240", "NA20129", "NA21309", "NA24694", "NA24695")
ihw_samples <- c("IHW09021", "IHW09049", "IHW09071", "IHW09117", "IHW09118",
"IHW09122", "IHW09125", "IHW09175", "IHW09198", "IHW09200",
"IHW09224", "IHW09245", "IHW09251", "IHW09359", "IHW09364",
"IHW09409")
# Process data
revio_data <- process_data(revio_file, "PacBio")
promethion_data <- process_data(promethion_file, "ONT")
# Combine datasets
combined_data <- bind_rows(revio_data, promethion_data) %>%
mutate(
x_group = paste(platform, sample_group),  # Create combined group for x-axis
x_group = factor(
x_group,
levels = c("PacBio HPRC", "PacBio IHW", "ONT HPRC", "ONT IHW")  # Ensure correct x-axis order
)
)
# Create the box plot using viridis colors
combined_plot <- ggplot(combined_data, aes(x = x_group, y = unique_reads, fill = x_group)) +
geom_boxplot(
alpha = 0.3, width = 0.3, outlier.shape = NA, color = "black"
) +
geom_jitter(
aes(color = x_group),
width = 0.15, height = 0, size = 2, alpha = 0.8  # Adjust jitter width to match box width
) +
scale_y_continuous(labels = scales::scientific) +
scale_fill_viridis_d(option = "D", begin = 0.1, end = 0.9) +  # Viridis color for fill
scale_color_viridis_d(option = "D", begin = 0.1, end = 0.9) +  # Viridis color for jitter
labs(x = "", y = "Unique\nReads") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12, face = "bold", color = "black"),
axis.text.y = element_text(size = 8, color = "black"),
axis.title.y = element_text(size = 12, face = "bold", lineheight = 0.8),
axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
panel.grid.major.y = element_line(color = "gray80", size = 0.5),  # Feint grid lines
panel.grid.major.x = element_blank(),  # Remove vertical grid lines
panel.grid.minor = element_blank(),
legend.position = "none"
)
# Display the plot
print(combined_plot)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(viridis)  # For color palette
# Set working directory
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/mapping/")
# File paths
revio_file <- "revio_flagstat_results.csv"
promethion_file <- "promethion_flagstat_results.csv"
# Function to process and clean data
process_data <- function(file_path, platform) {
# Read data
data <- read_csv(file_path, col_names = TRUE) %>%
mutate(
total = as.numeric(gsub(",", "", total)),  # Remove commas and convert to numeric
duplicates = as.numeric(gsub(",", "", duplicates)),  # Remove commas and convert to numeric
unique_reads = total - duplicates,  # Calculate unique reads
platform = platform  # Add platform column
) %>%
select(sample, unique_reads, platform) %>%  # Keep necessary columns
mutate(
sample_group = case_when(
sample %in% hprc_samples ~ "HPRC",
sample %in% ihw_samples ~ "IHW",
TRUE ~ "Other"
)
) %>%
filter(sample_group != "Other") %>%  # Keep only HPRC and IHW
drop_na(unique_reads)  # Remove rows with NA in unique_reads
return(data)
}
# Define sample groups
hprc_samples <- c("HG002", "HG003", "HG004", "HG005", "HG01106", "HG01258",
"HG01928", "HG02055", "HG02630", "HG03492", "HG03579",
"NA19240", "NA20129", "NA21309", "NA24694", "NA24695")
ihw_samples <- c("IHW09021", "IHW09049", "IHW09071", "IHW09117", "IHW09118",
"IHW09122", "IHW09125", "IHW09175", "IHW09198", "IHW09200",
"IHW09224", "IHW09245", "IHW09251", "IHW09359", "IHW09364",
"IHW09409")
# Process data
revio_data <- process_data(revio_file, "PacBio")
promethion_data <- process_data(promethion_file, "ONT")
# Combine datasets
combined_data <- bind_rows(revio_data, promethion_data) %>%
mutate(
x_group = paste(platform, sample_group),  # Create combined group for x-axis
x_group = factor(
x_group,
levels = c("PacBio HPRC", "PacBio IHW", "ONT HPRC", "ONT IHW")  # Ensure correct x-axis order
)
)
# Create the box plot using viridis colors
combined_plot <- ggplot(combined_data, aes(x = x_group, y = unique_reads, fill = x_group)) +
geom_boxplot(
alpha = 0.3, width = 0.3, outlier.shape = NA, color = "black"
) +
geom_jitter(
aes(color = x_group),
width = 0.15, height = 0, size = 2, alpha = 0.8  # Adjust jitter width to match box width
) +
scale_y_continuous(labels = scales::scientific) +
scale_fill_viridis_d(option = "D", begin = 0.1, end = 0.9) +  # Viridis color for fill
scale_color_viridis_d(option = "D", begin = 0.1, end = 0.9) +  # Viridis color for jitter
labs(x = "", y = "Unique\nReads") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12, face = "bold", color = "black"),
axis.text.y = element_text(size = 8, color = "black"),
axis.title.y = element_text(size = 12, face = "bold", lineheight = 0.8),
axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
panel.grid.major.y = element_line(color = "gray80", size = 0.5),  # Feint grid lines
panel.grid.major.x = element_blank(),  # Remove vertical grid lines
panel.grid.minor = element_blank(),
legend.position = "none"
)
# Display the plot
print(combined_plot)
ggsave(filename = "mapping_box.pdf", plot = combined_plot, width=169, units = "mm")
ggsave(filename = "mapping_box.png", plot = combined_plot, width=169, units = "mm")
ggsave(filename = "mapping_bar_chart.pdf", plot = combined_plot, width=169, units = "mm")
ggsave(filename = "mapping_bar_chart.png", plot = combined_plot, width=169, units = "mm")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(patchwork)
# Set working directory
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/mapping/")
# File paths
revio_file <- "revio_flagstat_results.csv"
promethion_file <- "promethion_flagstat_results.csv"
# Function to process and clean data
process_data <- function(file_path) {
# Read data
data <- read_csv(file_path, col_names = TRUE) %>%
mutate(
total = as.numeric(gsub(",", "", total)),  # Remove commas and convert to numeric
duplicates = as.numeric(gsub(",", "", duplicates)),  # Remove commas and convert to numeric
unique_reads = total - duplicates  # Calculate unique reads
) %>%
select(sample, unique_reads) %>%  # Keep only necessary columns
mutate(
sample = factor(sample, levels = unique(sample))  # Retain the default order of samples in the data
) %>%
drop_na(unique_reads)  # Remove rows with NA in unique_reads
return(data)
}
# Process Revio data
revio_data <- process_data(revio_file)
# Process Promethion data and match sample order to Revio
promethion_data <- process_data(promethion_file) %>%
mutate(sample = factor(sample, levels = levels(revio_data$sample)))  # Match sample order
# Debug: Verify processed data alignment
message("Revio Data:")
print(head(revio_data))
message("Promethion Data:")
print(head(promethion_data))
# Function to create bar plots
create_bar_plot <- function(data, color, y_label, remove_x = FALSE) {
ggplot(data, aes(x = sample, y = unique_reads)) +
geom_bar(stat = "identity", fill = color, color = color, alpha = 0.8) +
scale_y_continuous(labels = scales::scientific) +  # Scientific notation for y-axis
ylab(y_label) +
theme_minimal() +
theme(
axis.text.x = if (remove_x) element_blank() else element_text(angle = 45, hjust = 1, size = 8),
axis.title.x = if (remove_x) element_blank() else element_text(size = 12),
axis.ticks.x = if (remove_x) element_blank() else element_line(size = 0.5),
axis.text.y = element_text(size = 8),
axis.title.y = element_text(angle = 0, size = 8, hjust = 0.5, vjust = 0.5, face = "bold"),
panel.grid.major.x = element_blank()  # Remove vertical grid lines
)
}
# Create plots
revio_plot <- create_bar_plot(revio_data, "blue", "Revio\nUnique\nReads", remove_x = TRUE)
promethion_plot <- create_bar_plot(promethion_data, "red", "PromethION\nUnique\nReads")
# Combine plots vertically using patchwork
combined_plot <- revio_plot / promethion_plot
# Display the combined plot
print(combined_plot)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(patchwork)
# Set working directory
setwd("/Users/matt/Documents/GitHub/mhc/scripts/visualizations/mapping/")
# File paths
revio_file <- "revio_flagstat_results.csv"
promethion_file <- "promethion_flagstat_results.csv"
# Function to process and clean data
process_data <- function(file_path) {
# Read data
data <- read_csv(file_path, col_names = TRUE) %>%
mutate(
total = as.numeric(gsub(",", "", total)),  # Remove commas and convert to numeric
duplicates = as.numeric(gsub(",", "", duplicates)),  # Remove commas and convert to numeric
unique_reads = total - duplicates  # Calculate unique reads
) %>%
select(sample, unique_reads) %>%  # Keep only necessary columns
mutate(
sample = factor(sample, levels = unique(sample))  # Retain the default order of samples in the data
) %>%
drop_na(unique_reads)  # Remove rows with NA in unique_reads
return(data)
}
# Process Revio data
revio_data <- process_data(revio_file)
# Process Promethion data and match sample order to Revio
promethion_data <- process_data(promethion_file) %>%
mutate(sample = factor(sample, levels = levels(revio_data$sample)))  # Match sample order
# Debug: Verify processed data alignment
message("Revio Data:")
print(head(revio_data))
message("Promethion Data:")
print(head(promethion_data))
# Function to create bar plots
create_bar_plot <- function(data, color, y_label, remove_x = FALSE) {
ggplot(data, aes(x = sample, y = unique_reads)) +
geom_bar(stat = "identity", fill = color, color = color, alpha = 0.8) +
scale_y_continuous(labels = scales::scientific) +  # Scientific notation for y-axis
ylab(y_label) +
theme_minimal() +
theme(
axis.text.x = if (remove_x) element_blank() else element_text(angle = 45, hjust = 1, size = 8),
axis.title.x = if (remove_x) element_blank() else element_text(size = 12),
axis.ticks.x = if (remove_x) element_blank() else element_line(size = 0.5),
axis.text.y = element_text(size = 8),
axis.title.y = element_text(angle = 0, size = 8, hjust = 0.5, vjust = 0.5, face = "bold"),
panel.grid.major.x = element_blank()  # Remove vertical grid lines
)
}
# Create plots
revio_plot <- create_bar_plot(revio_data, "blue", "Revio\nUnique\nReads", remove_x = TRUE)
promethion_plot <- create_bar_plot(promethion_data, "red", "PromethION\nUnique\nReads")
# Combine plots vertically using patchwork
combined_plot <- revio_plot / promethion_plot
# Display the combined plot
print(combined_plot)
ggsave(filename = "mapping_bar_chart.pdf", plot = combined_plot, width=169, units = "mm")
ggsave(filename = "mapping_bar_chart.png", plot = combined_plot, width=169, units = "mm")
